box:
  id: golang
build:
  steps:
    - script:
        name: install go libraries
        code: |
                # Set GOPATH
                export GOPATH="/pipeline/source/"
                export PATH="$PATH:$GOPATH/bin"

                go get github.com/gorilla/context
                go get github.com/gorilla/mux 
                go get github.com/rs/cors 

                cd /pipeline/source/
                go build -o GoRun /pipeline/source/main.go
    - script:
        name: check
        code: |
            pwd
            ls -l /pipeline/source/
            go version

push-to-releases:
  steps:
    # Push to OCI Registry
    - internal/docker-push:
        tag: $WERCKER_GIT_BRANCH-$WERCKER_GIT_COMMIT
        cmd: /pipeline/source/GoRun
        ports: "8001"
        username: $OKE_USERNAME
        password: $OKE_PASSWORD
        repository: $OKE_REPOSITORY/$WERCKER_APPLICATION_NAME
        registry: $OKE_REGISTRY


deploy-to-oke:
  box:
        id: alpine
        cmd: /bin/sh
  steps:
    - bash-template
    
    - script:
        name: "Visualise Kubernetes config"
        code: cat kubernetes-deployment.yml
    
    - kubectl:
        name: delete deployment
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: delete -f $WERCKER_ROOT/kubernetes-deployment.yml --namespace=$APP_FLIGHT_NAMESPACE --ignore-not-found=true
        
        #- kubectl:
        #    name: create OCR secret
        #    server: $KUBERNETES_MASTER
        #    token: $KUBERNETES_TOKEN
        #    insecure-skip-tls-verify: true
        #    command: create secret docker-registry ocirsecret --docker-server=iad.ocir.io --docker-username=$OKE_USERNAME --docker-password=$OKE_PASSWORD --docker-email=${WERCKER_APPLICATION_OWNER_NAME}@mail.com --namespace=$APP_FLIGHT_NAMESPACE
        
    - kubectl:
        name: create deplyoment
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: create -f $WERCKER_ROOT/kubernetes-deployment.yml --namespace=$APP_FLIGHT_NAMESPACE
